# Dotnet Help
dotnet new -h

#Dotnet List
dotnet new list

#Package Manager Command
##Get The Path
pwd

##Add New Directory
 mkdir Utilities

##Add New Class Inside The directory
echo "public class Helper {}" > Utilities/Helper.cs

##Add New Class Inside The directory
echo "public class Helper {}" > Utilities/Helper.cs

##AddEmptyFiles
cat > test1.txt
$cat >> b.json


##add more lines inside the class
echo "public class Helper {"`
echo "public Helper()" >> Utilities/Helper.cs
echo "{" >> Utilities/Helper.cs
echo " " >> Utilities/Helper.cs
echo "}" >> Utilities/Helper.cs
echo "}" >> Utilities/Helper.cs
dotnet format

##Formate the style



#Create a Console application using Command Line
 dotnet new console  --framework "net8.0" -n "Name"

#ConnectionString
  "ConnString": "Server=ADMINISTRATOR\\SQLEXPRESS;Database=DigitalCurrency;User Id=h1;Password=h1;Trusted_Connection=yes;TrustServerCertificate=True;"
or
  "ConnString": "Server=ADMINISTRATOR\\SQLEXPRESS;Database=DigitalCurrency; Integrated Security=SSPI;  Trusted_Connection=yes;TrustServerCertificate=True;"

#Install important Libraries
Install-Package Microsoft.EntityFrameworkCore.SqlServer
Install-Package Microsoft.Extensions.Configuration
Install-Package Microsoft.Extensions.Configuration.Json
Install-Package Microsoft.EntityFrameworkCore.Tools


#Connection String from the appSettings.json which is an embedded resource
 string? ConnString = new ConfigurationBuilder().AddJsonFile("D:\\Programming\\EF\\Test\\appSettings.json")
                                         .Build().GetSection("ConnString").Value;



#EntityFramwork with database
add new migration=>    add-migration
remove migration =>    remove-migration
update database => update database
delete database => dotnet ef database drop --force




